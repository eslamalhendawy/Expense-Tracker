{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","year","day","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filtredExpenses","data","filter","elem","getFullYear","toString","expenseContent","length","ele","id","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","newExpenseData","Date","onFormSubmit","type","required","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","entredExpense","expenseData","random","onAddExpenseData","intialExpenses","App","setExpenses","entredData","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d43c66ce.chunk.js","sourcesContent":["import './ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-us\", { month: \"long\" });\r\n  const year = props.date.toLocaleString(\"en-us\", { year: \"numeric\" });\r\n  const day = props.date.toLocaleString(\"en-us\", { day: \"2-digit\" });\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item \">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">{`$ ${props.amount}`}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\"\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    }\r\n    return <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{'height': barFillHeight}}></div>\r\n        </div>\r\n            <div className=\"chart-bar__lable\">{props.label}</div>\r\n    </div>\r\n}\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMax = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ]\r\n    for(const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filtredExpenses = props.data.filter((elem) => {\r\n    return elem.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  let expenseContent = <h1 className=\"no-found\">No Expenses Found</h1>;\r\n  if (filtredExpenses.length > 0) {\r\n    expenseContent = filtredExpenses.map((ele) => {\r\n      return (\r\n        <ExpenseItem\r\n          id={ele.id}\r\n          title={ele.title}\r\n          amount={ele.amount}\r\n          date={ele.date}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses = {filtredExpenses} />\r\n        {expenseContent}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const newExpenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onFormSubmit(newExpenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={formSubmitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            value={enteredTitle}\r\n            type=\"text\"\r\n            onChange={titleChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            value={enteredAmount}\r\n            type=\"number\"\r\n            min=\"0.1\"\r\n            step=\"0.1\"\r\n            required\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            value={enteredDate}\r\n            type=\"Date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            required\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const formSubmitHandler = (entredExpense) => {\r\n    const expenseData = {\r\n      ...entredExpense,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpenseData(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onFormSubmit={formSubmitHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst intialExpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(intialExpenses);\n\n  const addExpenseData = (entredData) => {\n    setExpenses((prevExpenses) => {\n      return [entredData, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpenseData={addExpenseData} />\n      <Expenses data={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}